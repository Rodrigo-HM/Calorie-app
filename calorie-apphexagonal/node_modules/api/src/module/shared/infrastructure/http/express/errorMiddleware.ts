import { Request, Response, NextFunction } from "express";
import { ZodError } from "zod";

export function errorMiddleware(
  err: any,
  _req: Request,
  res: Response,
  _next: NextFunction
) {
  if (err instanceof ZodError) {
    return res.status(400).json({
      error: "Datos inv√°lidos",
      errors: err.flatten(),
    });
  }

  if (err?.name === "DomainError") {
    const status = err.message === "NOT_FOUND" ? 404 : 400;
    return res.status(status).json({ error: err.message });
  }

  if (typeof err?.code === "string") {
    const code = err.code as string;
    const codeStatus: Record<string, number> = {
      INVALID_CREDENTIALS: 401,
      EMAIL_TAKEN: 409,
      NOT_FOUND: 404,
      FOOD_NOT_FOUND: 400,
    };
    const status = codeStatus[code] ?? 400;
    return res.status(status).json({ error: code });
  }

  // eslint-disable-next-line no-console
  console.error("[UNHANDLED]", err);
  return res.status(500).json({ error: "Internal Server Error" });
}
